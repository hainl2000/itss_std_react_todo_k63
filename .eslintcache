[{"/home/runner/itssstdreacttodok63/src/index.js":"1","/home/runner/itssstdreacttodok63/src/App.js":"2","/home/runner/itssstdreacttodok63/src/reportWebVitals.js":"3","/home/runner/itssstdreacttodok63/src/components/Todo.js":"4","/home/runner/itssstdreacttodok63/src/components/TodoItem.js":"5","/home/runner/itssstdreacttodok63/src/components/Input.js":"6","/home/runner/itssstdreacttodok63/src/components/Filter.js":"7","/home/runner/itssstdreacttodok63/src/lib/util.js":"8","/home/runner/itssstdreacttodok63/src/hooks/storage.js":"9"},{"size":500,"mtime":1654156351052,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1654156351052,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1654156351052,"results":"13","hashOfConfig":"11"},{"size":1964,"mtime":1654160412867,"results":"14","hashOfConfig":"11"},{"size":662,"mtime":1654159098581,"results":"15","hashOfConfig":"11"},{"size":785,"mtime":1654159893643,"results":"16","hashOfConfig":"11"},{"size":908,"mtime":1654160266523,"results":"17","hashOfConfig":"11"},{"size":68,"mtime":1654156351052,"results":"18","hashOfConfig":"11"},{"size":655,"mtime":1654156351052,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8zyfg9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/home/runner/itssstdreacttodok63/src/index.js",[],["44","45"],"/home/runner/itssstdreacttodok63/src/App.js",[],"/home/runner/itssstdreacttodok63/src/reportWebVitals.js",[],"/home/runner/itssstdreacttodok63/src/components/Todo.js",["46","47","48"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems] = React.useState([\n      /* テストコード 開始 */\n    { key: getKey(), text: '日本語の宿題', done: false },\n    { key: getKey(), text: 'reactを勉強する', done: false },\n    { key: getKey(), text: '明日の準備をする', done: false },\n    /* テストコード 終了 */\n  ]);\n\n  const [filter, setFilter] = React.useState('ALL');\n\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n\n\n  const handleCheck = checked => {\n    const newItems = items.map(item => {\n      if (item.key === checked.key) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n    putItems(newItems);\n  };\n\n  const handleAdd = text => {\n    putItems([...items, { key: getKey(), text, done: false    }]);\n  };\n\n  const handleFilterChange = value => setFilter(value);\n  \n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n        <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem\n          key={item.key}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/runner/itssstdreacttodok63/src/components/TodoItem.js",[],"/home/runner/itssstdreacttodok63/src/components/Input.js",["49"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Enter to add\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\nexport default Input;\n","/home/runner/itssstdreacttodok63/src/components/Filter.js",["50","51","52"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/runner/itssstdreacttodok63/src/lib/util.js",[],["53","54"],"/home/runner/itssstdreacttodok63/src/hooks/storage.js",["55","56"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    \n  }, []);\n\n  const putItems = items => {\n    \n  };\n\n  const clearItems = () => {\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":16,"column":8,"nodeType":"63","messageId":"64","endLine":16,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":32,"column":42,"nodeType":"68","messageId":"69","endLine":32,"endColumn":44},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":16,"column":7,"nodeType":"72","endLine":20,"endColumn":8},{"ruleId":"70","severity":1,"message":"71","line":21,"column":7,"nodeType":"72","endLine":25,"endColumn":8},{"ruleId":"70","severity":1,"message":"71","line":26,"column":7,"nodeType":"72","endLine":30,"endColumn":8},{"ruleId":"57","replacedBy":"73"},{"ruleId":"59","replacedBy":"74"},{"ruleId":"61","severity":1,"message":"75","line":12,"column":7,"nodeType":"63","messageId":"64","endLine":12,"endColumn":18},{"ruleId":"61","severity":1,"message":"76","line":15,"column":17,"nodeType":"63","messageId":"64","endLine":15,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useStorage' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["77"],["78"],"'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]